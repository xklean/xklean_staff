//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "cls_staff", table_name = "tbl_staff_contact")]
pub struct Model {
    pub staff_id: Uuid,
    pub contact_type_id: Uuid,
    pub primary: bool,
    pub contact_id: Uuid,
    pub tenant_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_contact::Entity",
        from = "Column::ContactId",
        to = "super::tbl_contact::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblContact,
    #[sea_orm(
        belongs_to = "super::tbl_contact_type::Entity",
        from = "Column::ContactTypeId",
        to = "super::tbl_contact_type::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblContactType,
    #[sea_orm(
        belongs_to = "super::tbl_staff::Entity",
        from = "Column::StaffId",
        to = "super::tbl_staff::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblStaff,
}

impl Related<super::tbl_contact::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblContact.def()
    }
}

impl Related<super::tbl_contact_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblContactType.def()
    }
}

impl Related<super::tbl_staff::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblStaff.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
