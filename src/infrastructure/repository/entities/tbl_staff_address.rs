//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "cls_staff", table_name = "tbl_staff_address")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub address_id: Uuid,
    pub staff_id: Uuid,
    pub primary: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_address::Entity",
        from = "Column::AddressId",
        to = "super::tbl_address::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblAddress,
    #[sea_orm(
        belongs_to = "super::tbl_staff::Entity",
        from = "Column::StaffId",
        to = "super::tbl_staff::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblStaff,
}

impl Related<super::tbl_address::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblAddress.def()
    }
}

impl Related<super::tbl_staff::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblStaff.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
